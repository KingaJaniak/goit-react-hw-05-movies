{"version":3,"file":"static/js/558.dd73a88d.chunk.js","mappings":"8MAoDA,UA1CA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,UACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjBC,GAAuBC,EAAAA,EAAAA,MACjBC,GADkCC,EAAAA,EAAAA,GAAAH,EAAA,GAArB,GACQI,IAAI,SAKzBC,GAJeC,EAAAA,EAAAA,GAAS,sBAADC,OACLL,EAAK,0BADrBM,SAIeC,QASvB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAACE,EAAAA,GAAU,CAACC,SATK,SAAAC,GACnB,IAAMC,EAAOD,EAAIE,cACjBF,EAAIG,iBACJnB,EAAS,UAADS,OAAWb,EAASwB,QAAQC,QACpCJ,EAAKK,OACP,EAIuCT,SAAA,EACjCU,EAAAA,EAAAA,KAACC,EAAAA,GAAW,CACVC,KAAK,OACLC,YAAY,gBACZC,IAAK/B,KAEP2B,EAAAA,EAAAA,KAACK,EAAAA,GAAe,CAACH,KAAK,SAAQZ,SAAC,cAE3B,OAALN,QAAK,IAALA,OAAK,EAALA,EAAOsB,KACN,SAAAC,GAAI,OACF1B,IACEmB,EAAAA,EAAAA,KAAA,KAAAV,UACEU,EAAAA,EAAAA,KAACQ,EAAAA,GAAS,CAACC,GAAE,GAAAvB,OAAKqB,EAAKG,IAAMC,MAAO,CAAEC,KAAMrC,GAAWe,SACpDiB,EAAKM,SAFFN,EAAKG,GAKd,MAIX,C,+EC/CAI,EAAAA,EAAAA,SAAAA,QAAyB,gCAyBzB,IAvBiB,SAAAjC,GACf,IAAAkC,GAAgCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAnC,EAAAA,EAAAA,GAAAiC,EAAA,GAArC5B,EAAQ8B,EAAA,GAAEC,EAAWD,EAAA,GAC5BE,GAAkCH,EAAAA,EAAAA,WAAS,GAAMI,GAAAtC,EAAAA,EAAAA,GAAAqC,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BP,EAAAA,EAAAA,WAAS,GAAMQ,GAAA1C,EAAAA,EAAAA,GAAAyC,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAiBtB,OAfAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACI,OAAnBf,GAAa,GAAMa,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMvB,EAAAA,EAAAA,IAAU,GAAD5B,OAAIL,GAAKK,OAZlC,6CAY+C,KAAD,EAAA+C,EAAAE,EAAAG,KAA7CJ,EAAID,EAAJC,KACRhB,EAAYgB,GAAMC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAElBT,GAAS,GAAM,QAEK,OAFLS,EAAAC,KAAA,GAEfd,GAAa,GAAOa,EAAAK,OAAA,6BAAAL,EAAAM,OAAA,GAAAT,EAAA,wBAEvB,kBAVa,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAWdf,GACF,GAAG,CAAC/C,IAEG,CAAEM,SAAAA,EAAUkC,UAAAA,EAAWI,MAAAA,EAChC,C","sources":["components/Movies.js","hooks/useMovie.js"],"sourcesContent":["import { useRef } from 'react';\nimport { useNavigate, useSearchParams, useLocation } from 'react-router-dom';\nimport {\n  MovieLink,\n  MoviesInput,\n  MoviesForm,\n  MoviesSearchBtn,\n} from './App.styled';\nimport useMovie from 'hooks/useMovie';\n\nfunction Movies() {\n  const inputRef = useRef();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const { filmData } = useMovie(\n    `search/movie?query=${query}&include_adult=false&`\n  );\n\n  const films = filmData.results;\n\n  const handleSubmit = evt => {\n    const form = evt.currentTarget;\n    evt.preventDefault();\n    navigate(`?query=${inputRef.current.value}`);\n    form.reset();\n  };\n\n  return (\n    <div>\n      <MoviesForm onSubmit={handleSubmit}>\n        <MoviesInput\n          type=\"text\"\n          placeholder=\"Search movies\"\n          ref={inputRef}\n        ></MoviesInput>\n        <MoviesSearchBtn type=\"submit\">Search</MoviesSearchBtn>\n      </MoviesForm>\n      {films?.map(\n        film =>\n          query && (\n            <p key={film.id}>\n              <MovieLink to={`${film.id}`} state={{ from: location }}>\n                {film.title}\n              </MovieLink>\n            </p>\n          )\n      )}\n    </div>\n  );\n}\nexport default Movies;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nconst apiKey = 'api_key=f50c0a327ad9f74a43c2e114bf8126ff';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst useMovie = query => {\n  const [filmData, setFilmData] = useState({}); \n  const [isLoading, setIsLoading] = useState(false); \n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const getFilms = async () => {\n      setIsLoading(true);\n      try {\n        const { data } = await axios.get(`${query}${apiKey}`);\n        setFilmData(data);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getFilms();\n  }, [query]);\n\n  return { filmData, isLoading, error };\n};\n\nexport default useMovie;\n"],"names":["inputRef","useRef","location","useLocation","navigate","useNavigate","_useSearchParams","useSearchParams","query","_slicedToArray","get","films","useMovie","concat","filmData","results","_jsxs","children","MoviesForm","onSubmit","evt","form","currentTarget","preventDefault","current","value","reset","_jsx","MoviesInput","type","placeholder","ref","MoviesSearchBtn","map","film","MovieLink","to","id","state","from","title","axios","_useState","useState","_useState2","setFilmData","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","getFilms","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","sent","t0","finish","stop","apply","arguments"],"sourceRoot":""}