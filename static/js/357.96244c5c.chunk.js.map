{"version":3,"file":"static/js/357.96244c5c.chunk.js","mappings":"iNAGe,SAASA,IAAW,IAADC,EACxBC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAuCC,EAAAA,EAAAA,GAAS,SAADC,OAAUJ,EAAO,cAAxDK,EAAQH,EAARG,SAAUC,EAASJ,EAATI,UAAWC,EAAKL,EAALK,MAE7B,OAAID,GAAkBE,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eACvBF,GAAcC,EAAAA,EAAAA,KAAA,OAAAC,SAAK,4BAGrBC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CACGJ,EAASM,cAAgB,IAAKH,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gBAClCD,EAAAA,EAAAA,KAAA,MAAAC,SACmB,QADnBV,EACGM,EAASO,eAAO,IAAAb,OAAA,EAAhBA,EAAkBc,KAAI,SAAAC,GAAM,OAC3BJ,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKK,EAAOC,UACZP,EAAAA,EAAAA,KAAA,KAAAC,SAAIK,EAAOE,YAFJF,EAAOG,GAGX,QAKf,C,+ECnBAC,EAAAA,EAAAA,SAAAA,QAAyB,gCAyBzB,IAvBiB,SAAAC,GACf,IAAAC,GAAgCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCf,EAAQiB,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA1CnB,EAASoB,EAAA,GAAEC,EAAYD,EAAA,GAC9BE,GAA0BP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAAlCrB,EAAKsB,EAAA,GAAEC,EAAQD,EAAA,GAiBtB,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACI,OAAnBd,GAAa,GAAMY,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMvB,EAAAA,EAAAA,IAAU,GAADd,OAAIe,GAAKf,OAZlC,6CAY+C,KAAD,EAAAiC,EAAAE,EAAAG,KAA7CJ,EAAID,EAAJC,KACRd,EAAYc,GAAMC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAElBT,GAAS,GAAM,QAEK,OAFLS,EAAAC,KAAA,GAEfb,GAAa,GAAOY,EAAAK,OAAA,6BAAAL,EAAAM,OAAA,GAAAT,EAAA,wBAEvB,kBAVa,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAWdf,GACF,GAAG,CAACb,IAEG,CAAEd,SAAAA,EAAUC,UAAAA,EAAWC,MAAAA,EAChC,C","sources":["components/Reviews.js","hooks/useMovie.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport useMovie from 'hooks/useMovie';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const { filmData, isLoading, error } = useMovie(`movie/${movieId}/reviews?`); \n\n  if (isLoading) return <div>Loading...</div>; \n  if (error) return <div>Error fetching reviews</div>;\n\n  return (\n    <div>\n      {filmData.total_results < 1 && <p>No reviews</p>}\n      <ul>\n        {filmData.results?.map(review => (\n          <li key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nconst apiKey = 'api_key=f50c0a327ad9f74a43c2e114bf8126ff';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst useMovie = query => {\n  const [filmData, setFilmData] = useState({}); \n  const [isLoading, setIsLoading] = useState(false); \n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const getFilms = async () => {\n      setIsLoading(true);\n      try {\n        const { data } = await axios.get(`${query}${apiKey}`);\n        setFilmData(data);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getFilms();\n  }, [query]);\n\n  return { filmData, isLoading, error };\n};\n\nexport default useMovie;\n"],"names":["Reviews","_filmData$results","movieId","useParams","_useMovie","useMovie","concat","filmData","isLoading","error","_jsx","children","_jsxs","total_results","results","map","review","author","content","id","axios","query","_useState","useState","_useState2","_slicedToArray","setFilmData","_useState3","_useState4","setIsLoading","_useState5","_useState6","setError","useEffect","getFilms","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","sent","t0","finish","stop","apply","arguments"],"sourceRoot":""}